#!/usr/bin/env groovy

def gv

pipeline {
    agent {
        label 'developer'
    }
    environment {
        IMAGE_django_web = 'djangoreactdev/django-web:1.0'
        IMAGE_nginx_proxy = 'djangoreactdev/nginx-proxy:1.0'
    }
    stages {
        stage("init") {
            steps {
                script {
                    gv = load "./jenkins/script.groovy"
                }
            }
        }
        stage("build") {
            steps {
                script {
                    gv.buildJar()
                }
            }
        }
        stage("build image") {
            steps {
                script {
                    gv.buildImage()
                }
            }
        }
        stage('provision server') {
            environment {
                AWS_ACCESS_KEY_ID = credentials('jenkins_aws_access_key_id')
                AWS_SECRET_ACCESS_KEY = credentials('jenkins_aws_secret_access_key')
                TF_VAR_env_prefix = 'test'
            }
            steps {
                script {
                    dir('terraform/on_ec2/dev') {
                        sh "terraform init"
                        sh "terraform apply --auto-approve"
                        env.EC2_PUBLIC_IP = sh(
                            script: "terraform output ec2_public_ip",
                            returnStdout: true
                        ).trim().replaceAll('[\\[\\]\\s"]', '').replaceAll(',', '')
                        
                        echo "${env.EC2_PUBLIC_IP}"
           
                        echo "waiting for EC2 server to initialize" 
                        // sleep(time: 20, unit: "SECONDS") 
                    }
                }
            }
        }
        stage("deploy") {
            steps {
                script {
                    gv.deployApp()
                }
            }
        }
    }
}